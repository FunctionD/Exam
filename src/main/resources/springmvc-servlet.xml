<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
                    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 初始化控制器bean -->
    <context:component-scan base-package="com.lanqiao.exam.controller"/>

    <!-- 支持spring3.0+ 新的mvc注解,不加有些注解功能不行，如json转换的@ResponseBody -->
    <mvc:annotation-driven enable-matrix-variables="true"/>

    <!-- 拦截器 -->
    <mvc:interceptors>
        <!-- 全局拦截器，拦截所有springmvc的url！ -->
        <!-- <bean class="com.lanqiao.interceptor.MyInterceptor"/>-->

        <mvc:interceptor>
            <!-- 拦截什么样的请求 -->
            <mvc:mapping path="/**"/>
            <!-- 什么样的请求不拦截 -->
            <mvc:exclude-mapping path="/user/**"/>
            <mvc:exclude-mapping path="/user2/**"/>
            <bean class="com.lanqiao.exam.interceptor.AuthenticationInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 配置*.js,*.css,*.jpg,*.html等的请不由DispatcherServlet处理，而直接交tomcat服务的默认Servlet来处理
            不同的服务器其默认Servlet的名字是不同，但tomcat默认Servlet的名字叫"default" -->
    <mvc:default-servlet-handler/>

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" -->
    <!--
        controller.select(){
            return "list"; //  /views/list.jsp
        }
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/views/"/>
        <property name="suffix" value=".jsp"/>
        <!-- 如果使用jstl的话，配置下面的属性 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>
</beans>